"""
1.	Написать программу, которая будет складывать, вычитать, умножать или делить
два числа. Числа и знак операции вводятся пользователем. После выполнения
вычисления программа не должна завершаться, а должна запрашивать новые данные
для вычислений. Завершение программы должно выполняться при вводе символа '0'
в качестве знака операции. Если пользователь вводит неверный знак
(не '0', '+', '-', '*', '/'), то программа должна сообщать ему об ошибке и
снова запрашивать знак операции.
Также сообщать пользователю о невозможности деления на ноль,
если он ввел 0 в качестве делителя.
"""

# 1. Цикл
def operation(n, a, b):
    if n == "+":
        result = a + b
    elif n == "-":
        result = a - b
    elif n == "*":
        result = a * b
    elif n == "/":
        result = a / b
    return result


while True:
    n = input("Введите знак операции ('0', '+', '-', '*', '/'): ")
    if n not in ['0', '+', '-', '*', '/']:
        print("Неверный знак операции")
        continue
    elif n == '0':
        print("Программа завершена")
        break
    else:
        a = int(input("Введите первое число: "))
        b = int(input("Введите второе число: "))
        if b == 0:
            print("На нуль делить нельзя")
            continue
        else:
            print(operation(n, a, b))


# 2. Рекурсия
def operation(n, a, b):
    result = None
    if n == "+":
        result = a + b
    elif n == "-":
        result = a - b
    elif n == "*":
        result = a * b
    elif n == "/":
        result = a / b
    return result


def recursion():
    n = input("Введите знак операции ('0', '+', '-', '*', '/'): ")
    if n not in ['0', '+', '-', '*', '/']:
        print("Неверный знак операции")
    elif n == '0':
        print("Программа завершена")
        return
    else:
        a = int(input("Введите первое число: "))
        b = int(input("Введите второе число: "))
        if b == 0:
            print("На нуль делить нельзя")
        else:
            print(operation(n, a, b))
    recursion()


recursion()